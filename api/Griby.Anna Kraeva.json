{
	"info": {
		"_postman_id": "06ed34f2-6cab-40e3-8d72-c03ece9276a1",
		"name": "Griby",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26370113"
	},
	"item": [
		{
			"name": "get catalog",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Загружаем библиотеку Cheerio\r",
							"pm.sendRequest(\"https://cdnjs.cloudflare.com/ajax/libs/cheerio/1.0.0-rc.10/cheerio.min.js\", function (err, res, body) {\r",
							"    if (err) {\r",
							"        console.error(\"Не удалось загрузить Cheerio:\", err);\r",
							"        return;\r",
							"    }\r",
							"\r",
							"    // Выполняем код только после загрузки Cheerio\r",
							"    eval(body);\r",
							"\r",
							"    // Получаем тело ответа\r",
							"    const responseBody = pm.response.text();\r",
							"\r",
							"    // Парсим HTML с помощью Cheerio\r",
							"    const $ = cheerio.load(responseBody);\r",
							"\r",
							"    const itemIds = [];\r",
							"\r",
							"    // Находим все кнопки с атрибутом onclick\r",
							"    $('button[onclick]').each((i, elem) => {\r",
							"        const onclickValue = $(elem).attr('onclick');\r",
							"        const match = onclickValue.match(/addToCard\\('(\\d+)'/);\r",
							"        if (match) {\r",
							"            // Преобразуем значение в целочисленный формат\r",
							"            const itemId = parseInt(match[1], 10);\r",
							"            itemIds.push(itemId);\r",
							"        }\r",
							"    });\r",
							"\r",
							"    // Сохраняем коллекцию item_id в переменную коллекции Postman\r",
							"    pm.collectionVariables.set('item_ids', JSON.stringify(itemIds));\r",
							"    pm.collectionVariables.set('itemId', itemIds[0]);\r",
							"\r",
							"    // Создаем массив DellIds и копируем значения из itemIds\r",
							"    const DellIds = [...itemIds];\r",
							"\r",
							"    // Сохраняем DellIds в переменную коллекции Postman\r",
							"    pm.collectionVariables.set('DellIds', JSON.stringify(DellIds));\r",
							"\r",
							"    // Тест на статус код 200\r",
							"    pm.test(\"Status code is 200\", function () {\r",
							"        pm.response.to.have.status(200);\r",
							"    });\r",
							"});\r",
							"\r",
							"// Получаем сохраненные item_ids из переменной коллекции\r",
							"const itemIds = JSON.parse(pm.collectionVariables.get('item_ids'));\r",
							"\r",
							"// Тест на количество товаров больше нуля\r",
							"pm.test(`Количество товаров - ${itemIds.length}`, function () {\r",
							"    // Проверяем, что количество товаров больше нуля\r",
							"    pm.expect(itemIds.length).to.be.above(0);\r",
							"\r",
							"    // Возвращаем успешный результат для теста\r",
							"    pm.expect(true).to.be.true;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "SECTIONBTN_ID",
							"value": "24",
							"description": "шоколад",
							"type": "text"
						},
						{
							"key": "SECTIONBTN_ID",
							"value": "14",
							"description": "грибы маринованные",
							"type": "text",
							"disabled": true
						},
						{
							"key": "SECTIONBTN_ID",
							"value": "15",
							"description": "грибы сушеные",
							"type": "text",
							"disabled": true
						},
						{
							"key": "SECTIONBTN_ID",
							"value": "27",
							"description": "бальзамы и сиропы",
							"type": "text",
							"disabled": true
						},
						{
							"key": "SECTIONBTN_ID",
							"value": "16",
							"description": "кедровый орех",
							"type": "text",
							"disabled": true
						},
						{
							"key": "SECTIONBTN_ID",
							"value": "17",
							"description": "мёд",
							"type": "text",
							"disabled": true
						},
						{
							"key": "SECTIONBTN_ID",
							"value": "18",
							"description": "папоротник",
							"type": "text",
							"disabled": true
						},
						{
							"key": "SECTIONBTN_ID",
							"value": "19",
							"description": "травяные сборы",
							"type": "text",
							"disabled": true
						},
						{
							"key": "SECTIONBTN_ID",
							"value": "22",
							"description": "деликатесы из дичи",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/ajax_catalog_prod.php",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"ajax_catalog_prod.php"
					]
				}
			},
			"response": []
		},
		{
			"name": "AddToCart",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Получаем текущий массив itemIds из коллекционных переменных и преобразуем его в массив JavaScript\r",
							"var itemIds = JSON.parse(pm.collectionVariables.get('item_ids') || '[]');\r",
							"\r",
							"// Проверяем, есть ли еще элементы для добавления\r",
							"if (itemIds.length > 0) {\r",
							"    // Устанавливаем следующий idProd для текущего запроса\r",
							"    pm.collectionVariables.set('itemId', itemIds.shift());\r",
							"\r",
							"    // Устанавливаем следующий запрос в коллекции\r",
							"    pm.execution.setNextRequest('AddToCart');\r",
							"} else {\r",
							"    console.log('Все товары добавлены в корзину');\r",
							"}\r",
							"\r",
							"// Обновляем массив itemIds в коллекционных переменных, преобразуя его обратно в строку JSON\r",
							"pm.collectionVariables.set('item_ids', JSON.stringify(itemIds));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "data",
							"value": "{\"idCookie\":\"{{idCookie}}\",\"idProd\":\"{{itemId}}\",\"type\":\"add\"}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/basketOrder.php",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"basketOrder.php"
					]
				}
			},
			"response": []
		},
		{
			"name": "get cart",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/basketList.php",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"basketList.php"
					]
				}
			},
			"response": []
		},
		{
			"name": "change quantity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is equal to 2\", function () {\r",
							"    pm.response.to.have.body(\"2\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": "BX_USER_ID=8e3cc3c628d3123372360f1b2b692841; basketor=494563;PHPSESSID=gF2TovUKIB3Mww3il5fDn9Rai4Nkawe6",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "data",
							"value": "{\"idCookie\":\"{{idCookie}}\",\"idProd\":{{itemId}},\"type\":\"plus\"}",
							"description": "\"type\":\"minus\", если надо уменьшить количество единиц товара",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/basketOrder.php",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"basketOrder.php"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteFromCart",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Получаем текущий массив itemIds из коллекционных переменных и преобразуем его в массив JavaScript\r",
							"var DellIds = JSON.parse(pm.collectionVariables.get('DellIds') || '[]');\r",
							"\r",
							"// Проверяем, есть ли еще элементы для добавления\r",
							"if (DellIds.length > 0) {\r",
							"    // Устанавливаем следующий idProd для текущего запроса\r",
							"    pm.collectionVariables.set('itemId', DellIds.shift());\r",
							"\r",
							"    // Устанавливаем следующий запрос в коллекции\r",
							"    pm.execution.setNextRequest('DeleteFromCart');\r",
							"} else {\r",
							"    console.log('Все товары удалены из корзины');\r",
							"}\r",
							"\r",
							"// Обновляем массив itemIds в коллекционных переменных, преобразуя его обратно в строку JSON\r",
							"pm.collectionVariables.set('DellIds', JSON.stringify(DellIds));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "cookie",
						"value": "BX_USER_ID=8e3cc3c628d3123372360f1b2b692841; basketor=494563;PHPSESSID=gF2TovUKIB3Mww3il5fDn9Rai4Nkawe6",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "data",
							"value": "{\"idCookie\":\"{{idCookie}}\",\"idProd\":{{itemId}},\"type\":\"delete\"}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/basketOrder.php",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"basketOrder.php"
					]
				}
			},
			"response": []
		},
		{
			"name": "get empty cart",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Текст в теле ответа — «Корзина пуста, необходимо это исправить»\", function () {\r",
							"    pm.expect(pm.response.text()).to.include('Корзина пуста, необходимо это исправить');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/basketList.php",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"basketList.php"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"pm.request.headers.add({key: 'cookie', value: 'BX_USER_ID=8e3cc3c628d3123372360f1b2b692841; basketor=494563;PHPSESSID=gF2TovUKIB3Mww3il5fDn9Rai4Nkawe6'});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://www.sibdar-spb.ru/ajax"
		},
		{
			"key": "idCookie",
			"value": "494563",
			"type": "string"
		},
		{
			"key": "item_ids",
			"value": ""
		},
		{
			"key": "itemId",
			"value": ""
		},
		{
			"key": "DellIds",
			"value": ""
		}
	]
}